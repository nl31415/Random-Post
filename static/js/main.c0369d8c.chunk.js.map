{"version":3,"sources":["container/InputData/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["moment","locale","updateLocale","months","localizer","momentLocalizer","colorbg","InputData","useState","name","count","tableData","setTableData","events","setEvents","endOfPreviousMonth","Date","subtract","endOf","format","startOfNextMonth","add","startOf","className","span","map","e","i","item","index","value","onChange","newData","target","min","onClick","splice","type","style","marginRight","data","forEach","push","allItems","date","month","getMonth","year","getFullYear","firstDay","lastDay","getDate","eventPerDay","length","array","j","Math","floor","random","shuffleArray","listEvent","o","convertEvent","start","end","paddingLeft","selectable","startAccessor","endAccessor","views","Views","MONTH","height","popup","popupOffset","components","toolbar","event","prop","title","background","formats","weekdayFormat","culture","dateFormat","isEndOfPreviousMonth","diff","isStartOfNextMonth","memo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","noop","console","log","warn","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAOAA,IAAOC,OAAO,MACdD,IAAOE,aAAa,KAAM,CACxBC,OAAQ,CACN,oBACA,eACA,cACA,oBACA,oBACA,kBACA,oBACA,kBACA,mBACA,0BACA,mCACA,iCAIJ,IAAMC,EAAYC,YAAgBL,KAO5BM,EAAU,CACd,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGIC,EAAgB,WACpB,MAAkCC,mBAAsB,CACtD,CACEC,KAAM,qCACNC,MAAO,IAET,CACED,KAAM,wBACNC,MAAO,GAET,CACED,KAAM,qBACNC,MAAO,IAET,CACED,KAAM,aACNC,MAAO,GAET,CACED,KAAM,oBACNC,MAAO,MAnBX,mBAAOC,EAAP,KAAkBC,EAAlB,KAsBA,EAA4BJ,mBAAqB,IAAjD,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EAAqBf,IAAO,IAAIgB,MACnCC,SAAS,EAAG,UACZC,MAAM,SACNC,OAAO,cAEJC,EAAmBpB,IAAO,IAAIgB,MACjCK,IAAI,EAAG,UACPC,QAAQ,SACRH,OAAO,cA8JV,OACE,qBAAKI,UAAU,uBAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,KAAM,EAAX,UACE,qBAAKD,UAAU,YAAf,yCACCZ,EAAUc,KAAI,SAACC,EAAGC,GAAJ,OAjKEC,EAiKwBF,EAjKPG,EAiKUF,EA/JhD,sBAAKJ,UAAU,uBAAf,UACE,cAAC,IAAD,CACEO,MAAOF,EAAKnB,KACZc,UAAU,aACVQ,SAAU,SAACL,GACT,IAAIM,EAAoB,YAAOrB,GAC/BqB,EAAQH,GAAOpB,KAAOiB,EAAEO,OAAOH,MAC/BlB,EAAaoB,MAIjB,cAAC,IAAD,CACEF,MAAOF,EAAKlB,MACZa,UAAU,cACVQ,SAAU,SAACL,GACT,IAAIM,EAAoB,YAAOrB,GAC/BqB,EAAQH,GAAOnB,MAAQgB,EACvBd,EAAaoB,IAEfE,IAAK,IAGP,mBACEX,UAAU,2BACVY,QAAS,WACP,IAAIH,EAAoB,YAAOrB,GAC/BqB,EAAQI,OAAOP,EAAO,GACtBjB,EAAaoB,QA3BwBH,GAFvB,IAACD,EAAiBC,KAkKlC,sBAAKN,UAAU,cAAf,UACE,cAAC,IAAD,CACEY,QAAS,WA/HnBvB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEF,KAAM,GAAIC,MAAO,OAgIrCa,UAAU,aACVc,KAAK,UACLC,MAAO,CAAEC,YAAa,QAJxB,SAME,mBAAGhB,UAAU,kBAGf,cAAC,IAAD,CAAQY,QA7HD,WAEf,IAAIK,EAIC,GACL7B,EAAU8B,SAAQ,SAACf,EAAGC,GACpBa,EAAKE,KAAK,CACRjC,KAAMiB,EAAEjB,KACRC,MAAOgB,EAAEhB,MACT2B,KAAMV,OAKV,IAAIgB,EAGC,GACLH,EAAKC,SAAQ,SAACf,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEhB,MAAOiB,IAC3BgB,EAASD,KAAK,CAAEjC,KAAMiB,EAAEjB,KAAM4B,KAAMX,EAAEW,UAsB1C,IAlBA,IAAIO,EAAO,IAAI5B,KACX6B,EAAQD,EAAKE,WAAa,EAC1BC,EAAOH,EAAKI,cACZC,EAAW,EACXC,EAAU,IAAIlC,KAChB4B,EAAKI,cACLJ,EAAKE,WAAa,EAClB,GACAK,UAEEC,EAMA,GAEKzB,EAAI,EAAGA,EAAIgB,EAASU,OAAQ1B,IAC9ByB,EAAYH,EAAW,GAQ1BG,EAAYH,EAAW,GAAGP,KAA1B,2BACKC,EAAShB,IADd,IAEEsB,SAAUA,KATZG,EAAYH,EAAW,GAAK,CAAC,2BAEtBN,EAAShB,IAFY,IAGxBsB,SAAUA,OAShBA,EACeC,IAASD,EAAW,IAlElB,SAACK,GACpB,IAAK,IAAI3B,EAAI2B,EAAMD,OAAS,EAAG1B,EAAI,EAAGA,IAAK,CACzC,IAAM4B,EAAIC,KAAKC,MAAMD,KAAKE,UAAY/B,EAAI,IADD,EAElB,CAAC2B,EAAMC,GAAID,EAAM3B,IAAvC2B,EAAM3B,GAFkC,KAE9B2B,EAAMC,GAFwB,MAoE3CI,CAAaP,GACb,IAAIQ,EAIC,GAELR,EAAYX,SAAQ,SAACf,EAAGC,GACtBD,EAAEe,SAAQ,SAACoB,GACTA,EAAEZ,SAAWtB,EAAI,EACjBiC,EAAUlB,KAAKmB,SAUnB,IANA,IAAIC,EAKC,GACInC,EAAI,EAAGA,EAAIiC,EAAUP,OAAQ1B,IACpCmC,EAAapB,KAAK,CAChBjC,KAAMmD,EAAUjC,GAAGlB,KACnBsD,MAAO,IAAI/C,KAAJ,UAAY6B,EAAZ,YAAqBe,EAAUjC,GAAGsB,SAAlC,YAA8CF,IACrDiB,IAAK,IAAIhD,KAAJ,UAAY6B,EAAZ,YAAqBe,EAAUjC,GAAGsB,SAAlC,YAA8CF,IACnDV,KAAMuB,EAAUjC,GAAGU,QAErBY,GAAY,GACGC,IAASD,EAAW,GAGrCnC,EAAUgD,IAgCyBvC,UAAU,gBAAgBc,KAAK,UAA1D,0BAMJ,eAAC,IAAD,CAAKb,KAAM,GAAIc,MAAO,CAAE2B,YAAa,QAArC,UACE,qBAAK1C,UAAU,YAAf,uBACA,cAAC,IAAD,CACE2C,YAAU,EACV9D,UAAWA,EACXS,OAAQA,EACRsD,cAAc,QACdC,YAAY,MACZC,MAAO,CAACC,IAAMC,OACdjC,MAAO,CAAEkC,OAAQ,KACjB5B,KAAM,IAAI5B,KACVyD,OAAK,EACLC,YAAa,GACbC,WAAY,CACVC,QAAS,kBAAM,MACfC,MAlDS,SAACC,GACpB,OACE,cAAC,IAAD,CAASC,MAAOD,EAAKD,MAAMpE,KAA3B,SACE,qBACEc,UAAU,wBACVe,MAAO,CAAE0C,WAAW,IAAD,OAAM1E,EAAQwE,EAAKD,MAAMxC,KAAO,MAFrD,SAIGyC,EAAKD,MAAMpE,WA6CVwE,QAAS,CACPC,cAAe,SAACtC,EAAMuC,EAAS/E,GAAhB,OACbA,EAAUe,OAAOyB,EAAM,OAAQuC,IACjCC,WAAY,SAACxC,EAAMuC,EAAS/E,GAC1B,IAAMiF,EACJrF,IAAO4C,GAAM0C,KAAKvE,EAAoB,SAAW,EAC7CwE,EACJvF,IAAO4C,GAAM0C,KAAKlE,EAAkB,SAAW,EACjD,OAAIiE,GAAwBE,EACnBnF,EAAUe,OAAOyB,EAAM,MAAOuC,GAChC/E,EAAUe,OAAOyB,EAAM,IAAKuC,gBASpCK,iBAAKjF,GCzRLkF,MARf,WACE,OACE,qBAAKlE,UAAU,MAAf,SACE,cAAC,EAAD,OCOSmE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHd,SAASQ,KACTC,QAAQC,IAAMF,EACdC,QAAQE,KAAOH,EACfC,QAAQG,MAAQJ,EAEhBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.c0369d8c.chunk.js","sourcesContent":["import { Button, Col, Input, InputNumber, Row, Tooltip } from \"antd\";\nimport { FC, memo, useState } from \"react\";\nimport \"./style.scss\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/vi\";\nmoment.locale(\"vi\");\nmoment.updateLocale(\"vi\", {\n  months: [\n    \"Tháng Một\",\n    \"Tháng Hai\",\n    \"Tháng Ba\",\n    \"Tháng Bốn\",\n    \"Tháng Năm\",\n    \"Tháng Sáu\",\n    \"Tháng Bảy\",\n    \"Tháng Tám\",\n    \"Tháng Chín\",\n    \"Tháng Mười\",\n    \"Tháng Mười Một\",\n    \"Tháng Mười Hai\",\n  ],\n});\n\nconst localizer = momentLocalizer(moment);\n\ninterface TableItem {\n  name: string;\n  count: number;\n}\n\nconst colorbg = [\n  \"FF6666\",\n  \"FF9933\",\n  \"66CC00\",\n  \"00CCCC\",\n  \"0066CC\",\n  \"00CCCC\",\n  \"0066CC\",\n  \"6600CC\",\n  \"CC00CC\",\n  \"606060\",\n];\n\nconst InputData: FC = () => {\n  const [tableData, setTableData] = useState<TableItem[]>([\n    {\n      name: \"HẠNH PHÚC TỰ THÂN \",\n      count: 12,\n    },\n    {\n      name: \"MỐI QUAN HỆ\",\n      count: 9,\n    },\n    {\n      name: \"NGOẠI TÌNH\",\n      count: 18,\n    },\n    {\n      name: \"LIFESTYLE \",\n      count: 9,\n    },\n    {\n      name: \"MỞ PHỄU\",\n      count: 12,\n    },\n  ]);\n  const [events, setEvents] = useState<Array<any>>([]);\n  const endOfPreviousMonth = moment(new Date())\n    .subtract(1, \"months\")\n    .endOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n\n  const startOfNextMonth = moment(new Date())\n    .add(1, \"months\")\n    .startOf(\"month\")\n    .format(\"YYYY-MM-DD\");\n\n  const TableRenderItem = (item: TableItem, index: number) => {\n    return (\n      <div className=\"table-item-container\" key={index}>\n        <Input\n          value={item.name}\n          className=\"input-name\"\n          onChange={(e) => {\n            let newData: TableItem[] = [...tableData];\n            newData[index].name = e.target.value;\n            setTableData(newData);\n          }}\n        ></Input>\n\n        <InputNumber\n          value={item.count}\n          className=\"input-count\"\n          onChange={(e) => {\n            let newData: TableItem[] = [...tableData];\n            newData[index].count = e;\n            setTableData(newData);\n          }}\n          min={0}\n        ></InputNumber>\n\n        <i\n          className=\"fas fa-trash icon-delete\"\n          onClick={() => {\n            let newData: TableItem[] = [...tableData];\n            newData.splice(index, 1);\n            setTableData(newData);\n          }}\n        ></i>\n      </div>\n    );\n  };\n\n  const addNewItem = () => {\n    setTableData([...tableData, { name: \"\", count: 0 }]);\n  };\n\n  const shuffleArray = (array: Array<any>) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  const caculate = () => {\n    //copy table data\n    let data: Array<{\n      name: string;\n      count: number;\n      type: number;\n    }> = [];\n    tableData.forEach((e, i) => {\n      data.push({\n        name: e.name,\n        count: e.count,\n        type: i,\n      });\n    });\n\n    // push all event to arr\n    let allItems: Array<{\n      name: string;\n      type: number;\n    }> = [];\n    data.forEach((e) => {\n      for (let i = 0; i < e.count; i++) {\n        allItems.push({ name: e.name, type: e.type });\n      }\n    });\n\n    let date = new Date();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    let firstDay = 1;\n    let lastDay = new Date(\n      date.getFullYear(),\n      date.getMonth() + 1,\n      0\n    ).getDate();\n\n    let eventPerDay: Array<\n      Array<{\n        name: string;\n        type: number;\n        firstDay: number;\n      }>\n    > = [];\n\n    for (let i = 0; i < allItems.length; i++) {\n      if (!eventPerDay[firstDay - 1]) {\n        eventPerDay[firstDay - 1] = [\n          {\n            ...allItems[i],\n            firstDay: firstDay,\n          },\n        ];\n      } else {\n        eventPerDay[firstDay - 1].push({\n          ...allItems[i],\n          firstDay: firstDay,\n        });\n      }\n      firstDay++;\n      if (firstDay > lastDay) firstDay = 1;\n    }\n\n    shuffleArray(eventPerDay);\n    let listEvent: Array<{\n      name: string;\n      type: number;\n      firstDay: number;\n    }> = [];\n\n    eventPerDay.forEach((e, i) => {\n      e.forEach((o) => {\n        o.firstDay = i + 1;\n        listEvent.push(o);\n      });\n    });\n\n    let convertEvent: Array<{\n      name: string;\n      start: Date;\n      end: Date;\n      type: number;\n    }> = [];\n    for (let i = 0; i < listEvent.length; i++) {\n      convertEvent.push({\n        name: listEvent[i].name,\n        start: new Date(`${month}/${listEvent[i].firstDay}/${year}`),\n        end: new Date(`${month}/${listEvent[i].firstDay}/${year}`),\n        type: listEvent[i].type,\n      });\n      firstDay += 1;\n      if (firstDay > lastDay) firstDay = 1;\n    }\n\n    setEvents(convertEvent);\n  };\n\n  const EventElement = (prop: any) => {\n    return (\n      <Tooltip title={prop.event.name}>\n        <div\n          className=\"custom-rbg-event-item\"\n          style={{ background: `#${colorbg[prop.event.type % 10]}` }}\n        >\n          {prop.event.name}\n        </div>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <div className=\"input-data-container\">\n      <Row>\n        <Col span={6}>\n          <div className=\"col-title\">Nhập dữ liệu</div>\n          {tableData.map((e, i) => TableRenderItem(e, i))}\n          <div className=\"list-button\">\n            <Button\n              onClick={() => addNewItem()}\n              className=\"add-button\"\n              type=\"primary\"\n              style={{ marginRight: \"10px\" }}\n            >\n              <i className=\"fas fa-plus\"></i>\n            </Button>\n\n            <Button onClick={caculate} className=\"random-button\" type=\"primary\">\n              Random\n            </Button>\n          </div>\n        </Col>\n\n        <Col span={18} style={{ paddingLeft: \"10px\" }}>\n          <div className=\"col-title\">Lịch</div>\n          <Calendar\n            selectable\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            views={[Views.MONTH]}\n            style={{ height: 500 }}\n            date={new Date()}\n            popup\n            popupOffset={30}\n            components={{\n              toolbar: () => null,\n              event: EventElement,\n            }}\n            formats={{\n              weekdayFormat: (date, culture, localizer: any) =>\n                localizer.format(date, \"dddd\", culture),\n              dateFormat: (date, culture, localizer: any) => {\n                const isEndOfPreviousMonth =\n                  moment(date).diff(endOfPreviousMonth, \"days\") <= 0;\n                const isStartOfNextMonth =\n                  moment(date).diff(startOfNextMonth, \"days\") >= 0;\n                if (isEndOfPreviousMonth || isStartOfNextMonth)\n                  return localizer.format(date, \"D/M\", culture);\n                return localizer.format(date, \"D\", culture);\n              },\n            }}\n          ></Calendar>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default memo(InputData);\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport InputData from \"./container/InputData\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputData></InputData>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nfunction noop() {}\nconsole.log = noop;\nconsole.warn = noop;\nconsole.error = noop;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}